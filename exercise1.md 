We shall discuss the process of taking a Python app to production. When a dev int the teams to integrate a new feature or fix a bug there should be a process to streamline it. So we'll setup Pylint and Pytest for linting and testing and use setuptools for the build process. As an alternative to Jenkins/Github we should test Gitlab's Ci/CD which sounds promising and has a free tier other paid cloud options would be on Azure or AWss. Other candidates for the CI/CD pipeline are self hosted systems which don't have to rely on cloud infrastructure are Travis CI and Circle CI even though they have hosted options as well of course. A choice here has to be made between a in-house solution or a cloud solution. The in-house would mean we'd have a better control of the CI/CD infrastructure and could fine tune it to better suit our needs - The disadvantage of using a service like Jenkins or Travis CI in this way is that we would need to allocate resources to manage the server, be on top of security fixes and updates which may be a bit more that we would want to chew. A cloud solution on the other hand will lead to some payment plan if the project scales up but even though we don't have direct control over the server there are ways of implementing most of features we might want. 